name: Vega CI

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ['3.10']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          # Install essential build tools and GObject Introspection dependencies
          sudo apt-get install -y --no-install-recommends \
            pkg-config \
            libcairo2-dev \
            libgirepository1.0-dev \
            libglib2.0-dev \
            gir1.2-gtk-3.0 \
            python3-dev \
            gobject-introspection \
            libusb-1.0-0-dev \
            libudev-dev
          # Clean up apt cache
          sudo rm -rf /var/lib/apt/lists/*

      - name: Check pkg-config setup
        run: |
          echo "--- Checking pkg-config for girepository ---"
          pkg-config --modversion gobject-introspection-1.0 || echo "gobject-introspection-1.0 not found by pkg-config"
          pkg-config --exists girepository-1.0 && echo "Found girepository-1.0.pc" || echo "girepository-1.0.pc not found"
          echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH"
          echo "--- Listing potential pkgconfig directories ---"
          ls -d /usr/lib/*/pkgconfig || echo "No standard pkgconfig dirs found"
          ls -d /usr/share/pkgconfig || echo "/usr/share/pkgconfig not found"
          echo "--- Finding girepository pc files ---"
          sudo find /usr -name "girepository*.pc" || echo "No girepository*.pc files found in /usr"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Explicitly set PKG_CONFIG_PATH to help find .pc files
          export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig:$PKG_CONFIG_PATH
          echo "Using PKG_CONFIG_PATH=$PKG_CONFIG_PATH"
          # Install requirements, including PyGObject which needs the .pc file
          pip install -r requirements.txt
          # Install local package
          pip install -e ./vega_common

      - name: Run tests
        run: |
          python -m pytest

      - name: Run tests with coverage
        run: |
          python -m pytest --cov=vega_common --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8>=5.0.0 mypy>=1.0.0 black autopep8

      - name: Format code with Black
        run: |
          black vega_common vega_server vega_client --line-length 100

      - name: Check with flake8
        continue-on-error: true
        run: |
          # Use setup.cfg configuration instead of command line arguments
          python -m flake8 vega_common vega_server vega_client

      - name: Auto-fix flake8 issues (information only)
        continue-on-error: true
        run: |
          # Show how autopep8 would fix issues, but don't modify files
          autopep8 --max-line-length=100 --aggressive --aggressive --diff -r vega_common vega_server vega_client || true

      - name: Type check with mypy
        continue-on-error: true
        run: |
          python -m mypy vega_common vega_server vega_client --ignore-missing-imports
