# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: 'CodeQL'

on:
  push:
    branches: [main, master, develop]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [main, master, develop]
  schedule:
    - cron: '23 7 * * 6'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['python']
        # Run only on Python 3.10, other versions are commented out
        python-version: [
            # '3.9',
            '3.10',
          ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgirepository1.0-dev

      # Initializes the CodeQL tools for scanning
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: +security-and-quality

      # Instead of using autobuild, we'll manually prepare the environment
      - name: Build Python code
        run: |
          # This ensures CodeQL can properly analyze the Python code
          # Run any specific build steps needed for your project
          python -m compileall ./vega_server ./vega_client ./vega_common

      # Perform CodeQL Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: '/language:${{ matrix.language }}'

      # Transform SARIF to a simpler JSON format using jq
      - name: Transform SARIF to Readable JSON
        id: transform_sarif
        run: |
          # Ensure jq is installed (often pre-installed on ubuntu-latest)
          # sudo apt-get update && sudo apt-get install -y jq
          SARIF_FILE="/home/runner/work/vega/results/python.sarif"
          OUTPUT_JSON="codeql-results-readable.json"
          echo "Transforming $SARIF_FILE to $OUTPUT_JSON..."
          # Basic jq query to extract key fields. Adjust as needed.
          # Handles cases where results might be empty or null.
          jq '[ .runs[0].results[]? | select(. != null) | { rule: .ruleId, severity: .level, message: .message.text, file: .locations[0].physicalLocation.artifactLocation.uri // "N/A", line: .locations[0].physicalLocation.region.startLine // "N/A" } ]' "$SARIF_FILE" > "$OUTPUT_JSON"
          echo "Transformation complete. Output file: $OUTPUT_JSON"
          # Set output path for the artifact upload step
          echo "output_path=$OUTPUT_JSON" >> $GITHUB_OUTPUT
        shell: bash

      # Upload the transformed readable JSON results
      - name: Upload Readable JSON Results
        uses: actions/upload-artifact@v4
        with:
          name: CodeQL Readable Results (JSON)
          path: ${{ steps.transform_sarif.outputs.output_path }}
